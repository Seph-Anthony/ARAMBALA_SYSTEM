/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;
import config.dbConnect;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/**
 *
 * @author Admin
 */
public class editquan extends javax.swing.JDialog {
private int orderItemIdToEdit;
private orderpage parentOrderPage;
    /**
     * Creates new form editquan
     */
    public editquan() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
    }
    
      Color logcolor = new Color(63,195,128);
    Color excolor = new Color(0,102,102);
    public void setOrderItemIdToEdit(int orderItemId) {
    this.orderItemIdToEdit = orderItemId;
    // You might want to fetch and display the current quantity here if needed
}
    
    public void setParentOrderPage(orderpage parent) {
    this.parentOrderPage = parent;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        editquan = new javax.swing.JTextField();
        updatequantity = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setFocusTraversalPolicyProvider(true);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("EDIT QUANTITY");
        jLabel11.setToolTipText("");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 170, 40));

        jPanel9.setBackground(new java.awt.Color(0, 102, 102));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/images-removebg-preview.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel9.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 40));

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 60));

        editquan.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        editquan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        editquan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editquanActionPerformed(evt);
            }
        });
        jPanel1.add(editquan, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 170, 40));

        updatequantity.setBackground(new java.awt.Color(0, 102, 102));
        updatequantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        updatequantity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatequantityMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatequantityMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatequantityMouseExited(evt);
            }
        });
        updatequantity.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("UPDATE");
        updatequantity.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 20));

        jPanel1.add(updatequantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 130, 100, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editquanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editquanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editquanActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        orderpage re = new orderpage ();
        re.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jLabel6MouseClicked

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        orderpage re = new orderpage ();
        re.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jPanel9MouseClicked

    private void updatequantityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatequantityMouseClicked
       // TODO add your handling code here:
    String newQuantityText = editquan.getText();

    if (newQuantityText.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter the new quantity.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int newQuantity;
    try {
        newQuantity = Integer.parseInt(newQuantityText);
        if (newQuantity <= 0) {
            JOptionPane.showMessageDialog(this, "Quantity must be a positive number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid quantity format.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    dbConnect db = new dbConnect();
    String updateQuery = "UPDATE order_items SET quantity = ?, item_total = price * ? WHERE order_item_id = ?";

    try (Connection conn = db.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(updateQuery)) {

        // First, get the product ID and current stock for the item being edited
        int productId = 0;
        int currentStock = 0;
        try {
            String getProductInfoQuery = "SELECT product_id, p.p_stock FROM order_items oi JOIN product p ON oi.product_id = p.p_id WHERE oi.order_item_id = ?";
            PreparedStatement pstmtGetInfo = conn.prepareStatement(getProductInfoQuery);
            pstmtGetInfo.setInt(1, orderItemIdToEdit);
            ResultSet rs = pstmtGetInfo.executeQuery();
            if (rs.next()) {
                productId = rs.getInt("product_id");
                currentStock = rs.getInt("p_stock");
            }
            rs.close();
            pstmtGetInfo.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error retrieving product information: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            return; // Stop the update if product info cannot be retrieved
        }

        // Check if the new quantity exceeds the current stock
        if (newQuantity > currentStock) {
            JOptionPane.showMessageDialog(this, "Insufficient stock. Only " + currentStock + " available.", "Stock Limit Exceeded", JOptionPane.ERROR_MESSAGE);
            return; // Stop the update if the quantity is too high
        }

        pstmt.setInt(1, newQuantity);
        pstmt.setInt(2, newQuantity); // Use newQuantity to recalculate item_total
        pstmt.setInt(3, orderItemIdToEdit);

        int rowsUpdated = pstmt.executeUpdate();

        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(this, "Quantity updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            if (parentOrderPage != null) {
                // The refresh will now happen in the editMouseClicked of orderpage after the dialog closes
            }
            this.dispose(); // Close the edit quantity dialog
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update quantity.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database error during update: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    } finally {
        try {
            db.getConnection().close();
        } catch (SQLException ex) {
            System.err.println("Error closing database connection: " + ex.getMessage());
        }
    }

        
    }//GEN-LAST:event_updatequantityMouseClicked

    private void updatequantityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatequantityMouseEntered
       
        updatequantity.setBackground(logcolor);
    }//GEN-LAST:event_updatequantityMouseEntered

    private void updatequantityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatequantityMouseExited
   
        updatequantity.setBackground(excolor);
    }//GEN-LAST:event_updatequantityMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editquan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editquan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editquan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editquan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editquan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField editquan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel updatequantity;
    // End of variables declaration//GEN-END:variables
}
